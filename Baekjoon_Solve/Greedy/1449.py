# 수리공 항승(1449번)
###############################################################################
    # 문제: https://www.acmicpc.net/problem/1449
    # 그리디, 정렬
    # 문제가 살짝 이해가 안돼서 질문 게시판을 보다가 의도치 않게 아주 큰 힌트를 얻어서 풀 수 있었다.
    # 이해가 안 갔던 부분은 "항상 물을 막을 때, 적어도 그 위치의 좌우 0.5만큼 간격을 줘야한다"는 것이었다.
    # 질문 게시판을 찾아보니 예를 들어 물이 샌 곳의 위치가 1이라고 한다면 1 - 0.5에서 시작해서 L만큼 커버하는 것이었다.
    # 즉, 적어도 어떤 한 곳 A를 커버하려면, A - 0.5 ~ A + 0.5까지는 커버해야한다는 의미이다.
    # s가 0.5의 배수이므로, s에 L을 더한 e도 0.5의 배수이므로 .5로 끝난다. 즉, e까지가 커버 가능한 범위라는 의미이다.
    # e는 절대 자연수가 나올 수 없으므로, 자연수인 물이 샌 곳의 위치가 e보다 작다면 그 차이는 항상 0.5이다. 따라서 커버가 가능한 것이다.
###############################################################################
import sys
input = sys.stdin.readline

N, L = map(int, input().split())
lst = list(map(int, input().split()))
lst.sort()

cur = 0 # 현재 위치
s = lst[cur] - 0.5 # 시작 위치
e = s + L # 시작 위치에서 끝까지 커버 가능한 위치
tp = 1 # 현재 사용 테이프 개수

for i in range(1, N):
    nxt = lst[i]
    if nxt > e: # 현재 커버 가능한 위치보다 크면 테이프를 하나 더 쓴다
        tp += 1
        s = nxt - 0.5
        e = s + L

print(tp)
