# 두 배 더하기(12931번)
#################################################################################################
    # 문제: https://www.acmicpc.net/problem/12931
    # 그리디
    # 문제 유형은 그리디인데, 나는 왜 그냥 구현 문제라고 느껴진다
    # 풀이 자체는 모두 0인 리스트에서 타겟 리스트를 만드는 것이 아니라, 타겟 리스트에서 모두 0인 리스트로 만드는 역방향으로 접근했다
    # 처음에는 리스트의 모든 합을 구해서 2로 계속 나누다가 나누어 떨어지지 않으면 1을 빼는 식으로 연산의 총 횟수를 구했으나
    # 1%에서 틀렸습니다를 받았고 이렇게 했을 경우 반례가 있었다 => 2, 3 5일 때 합이 8이므로 위의 로직대로 계산하면 4가 나오는데, 실제론 6이 나와야한다.
    # 그래서 N개의 요소를 탐색하면서 2를 나누는 횟수는 연산 횟수의 최댓값을 구하고, 각 각 요소가 2로 나누어지지 않을 때 1을 뺀 횟수는 누적하여
    # 최종적으로 2를 나눈 횟수의 최댓값 + 1을 뺀 횟수의 누적을 출력하면 됐다.
#################################################################################################
import sys
input = sys.stdin.readline

N = int(input())
lst = list(map(int, input().split()))
cnt = 0
cnt1 = 0
for i in range(N):
    num = lst[i]
    cnt2 = 0
    while num:
        if not num % 2:
            num //= 2
            cnt2 += 1
        else:
            cnt1 += 1
            num -= 1
    cnt = max(cnt2, cnt)

print(cnt + cnt1)
