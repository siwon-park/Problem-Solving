# 나는 정말 휘파람을 못 불어(24956번)
####################################################################
    # 문제: https://www.acmicpc.net/problem/24956
    # DP, 조합론
    # 어떻게 풀지 많이 헤매다가 검색을 조금 해서 도움을 얻을 수 있었다.
    # 풀고나서 느낀 것이지만, DP이긴 한데 조합을 이용할 줄 아는게 더 중요했던 문제인 것 같다.
    # dp[i][3] = (dp[i-1][3]*2 + dp[i][2])를 이해하는게 중요한데
    # dp[i-1][3]은 이전까지 만들 수 있는 휘파람 부분 문자열의 개수라고 할 때
    # 여기서 E를 하나 더 붙이면 기존의 "WHE...E"의 개수만큼 늘어나므로 2배가 되고(dp[i-1][3]*2)
    # 그다음 "WHE"와 새로운 "E"를 붙이는 경우의 수를 구해야하는데 결국 이는 지금까지 나왔던 E의 개수만큼 +되는 것이므로
    # dp[i][2]를 더해주는 것이다.
    # 이뿐만 아니라 사실상 W가 몇개 나왔는지, 그리고 H가 나왔을 때, WH를 몇개 만들 수 있는지 등도 DP로 계속 기록해줘야한다.
####################################################################
import sys
input = sys.stdin.readline

N = int(input())
S = list(input().rstrip())
dp = [[0, 0, 0, 0] for _ in range(N+1)]

for i in range(1, N+1):
    dp[i] = dp[i-1][:]
    if S[i-1] == "W":
        dp[i][0] = dp[i-1][0] + 1
    elif S[i-1] == "H":
        dp[i][1] += dp[i-1][0]
    elif S[i-1] == "E":
        dp[i][3] = (dp[i-1][3]*2 + dp[i][2]) % (int(1e9)+7)
        dp[i][2] += dp[i-1][1]
    else:
        dp[i] = dp[i-1]
print(dp[N][3])
