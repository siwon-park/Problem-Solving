# 1, 2, 3 더하기 4(15989번)
#########################################################################################
    # 문제: https://www.acmicpc.net/problem/15989
    # 다이나믹 프로그래밍
    # dp[n-1][0]은 끝에 1을 붙여서 n-1을 만들 수 있는 경우의 수 => 1을 더 붙이면 n
    # dp[n-2][0] + dp[n-2][1]은 끝에 1과 2를 붙여서 n-2를 만들 수 있는 경우의 수 => 각각 1과 2를 붙이면 n
    # dp[n-3][0] + dp[n-3][1] + dp[n-3][2]는 끝에 1과 2, 3을 붙여서 n-3을 만들 수 있는 경우의 수 => 각각 1과 2, 3을 붙이면 n이 됨
#########################################################################################
import sys
input = sys.stdin.readline

dp = [[0, 0, 0] for _ in range(10001)]
dp[1], dp[2], dp[3] = [1, 0, 0], [1, 1, 0], [1, 1, 1]

for n in range(4, 10001):
    dp[n][0] = dp[n - 1][0]
    dp[n][1] = dp[n - 2][0] + dp[n - 2][1]
    dp[n][2] = dp[n - 3][0] + dp[n - 3][1] + dp[n - 3][2]

T = int(input())
for _ in range(T):
    n = int(input())
    print(sum(dp[n]))
